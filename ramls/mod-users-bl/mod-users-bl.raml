#%RAML 0.8
title: Mod-Users BL
baseUri: http://github.com/org/folio/mod-users-bl

documentation:
  - title: Business Logic Users API
    content: A front end for mod-users and mod-permissions

schemas:
  - compositeUser.json: !include ../../schemas/compositeUser.json
  - compositeUserListObject: !include ../../schemas/compositeUserListObject.json
  - loginCredentials: !include ../../schemas/mod-login/loginCredentials.json
  - mod-users/userdata.json: !include ../../schemas/mod-users/userdata.json
  - mod-users/usergroup.json: !include ../../schemas/mod-users/usergroup.json
  - mod-permissions/permissionUser.json: !include ../../schemas/mod-permissions/permissionUser.json
  - mod-login/credentials.json: !include ../../schemas/mod-login/credentials.json
  - mod-users/proxyfor.json: !include ../../schemas/mod-users/proxyfor.json
  - identifier: !include ../../schemas/identifier.json
  - errors: !include ../../schemas/errors.schema
  - error.schema: !include ../../schemas/error.schema
  - parameters.schema: !include ../../schemas/parameters.schema
  - metadata.schema: !include ../../schemas/metadata.schema
  - tags.schema: !include ../../schemas/tags.schema

traits:
  - secured: !include ../../traits/auth.raml
  - orderable: !include ../../traits/orderable.raml
  - pageable: !include ../../traits/pageable.raml
  - searchable: !include ../../traits/searchable.raml
  - language: !include ../../traits/language.raml
  - validate: !include ../../traits/validation.raml
  - includeable: !include ../../traits/includes.raml
  - permissionsExpandable:
      queryParameters:
        expandPermissions:
          description:
            Whether or not to expand permissions listings
          type: boolean
          required: false
resourceTypes:
  - compositeUserResource:
     get:
      description: "Get a user by <<typeName>>"
      is: [
        includeable,
        permissionsExpandable
      ]
      responses:
        200:
          body:
            application/json:
              schema: compositeUser.json
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        403:
          description: "Access denied"
          body:
            text/plain:
              example: "Access denied"
        404:
          description: "User not found"
          body:
            text/plain:
              example: "User not found"
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  - compositeForgottenResource:
      post:
        description: called when a user has forgotten <<resourceTypeName>>
        is: [permissionsExpandable, includeable]
        body:
          application/json:
            schema: identifier
        responses:
          204:
          400:
            description: "Bad request"
            body:
              text/plain:
                example: "Bad request"
          500:
            description: "Internal server error"
            body:
              text/plain:
                example: "Internal server error"

/bl-users:
  get:
    description: Get a number of user (and possibly related) records based on criteria in the user and related modules
    is: [
      searchable: {description: "", example: "active=true"},
      pageable,
      includeable
    ]
    responses:
      200:
        body:
          application/json:
            schema: compositeUserListObject
      400:
        description: "Bad request"
        body:
          text/plain:
            example: "Bad request"
      403:
        description: "Access denied"
        body:
          text/plain:
            example: "Access denied"
      500:
        description: "Internal server error"
        body:
          text/plain:
            example: "Internal server error"
  /by-id:
    /{id}:
      type: { compositeUserResource: { "typeName" : "id" } }
      is: [includeable]
  /by-username:
    /{username}:
      type: { compositeUserResource: { "typeName" : "username"} }
      is: [includeable]
  /_self:
    type: { compositeUserResource: { "typeName" : "self reference" } }
  /login:
    post:
      description: Allow a new user to login and return an authtoken, along with a composite user record
      is: [permissionsExpandable, includeable]
      body:
        application/json:
          schema: loginCredentials
      responses:
        201:
          body:
            application/json:
              schema: compositeUser.json
          headers:
            x-okapi-token:
        400:
          description: "Bad request"
          body:
            text/plain:
              example: "Bad request"
        500:
          description: "Internal server error"
          body:
            text/plain:
              example: "Internal server error"
  /forgotten:
    /password:
      type: {compositeForgottenResource: {"resourceTypeName" : "a password"}}
    /username:
      type: {compositeForgottenResource: {"resourceTypeName" : "a username"}}
